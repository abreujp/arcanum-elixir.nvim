*arcanum-elixir.nvim.txt*     For Neovim >= 0.8.0    Last change: 2025 July 14

==============================================================================
Table of Contents                      *arcanum-elixir.nvim-table-of-contents*

  - Preview                                      |arcanum-elixir.nvim-preview|
  - About ArcanumElixir              |arcanum-elixir.nvim-about-arcanumelixir|
  - Requirements                            |arcanum-elixir.nvim-requirements|
  - Installation                            |arcanum-elixir.nvim-installation|
  - Quick Start                              |arcanum-elixir.nvim-quick-start|
  - Configuration                          |arcanum-elixir.nvim-configuration|
  - Acknowledgments                      |arcanum-elixir.nvim-acknowledgments|
  - License                                      |arcanum-elixir.nvim-license|
1. Links                                           |arcanum-elixir.nvim-links|


PREVIEW                                          *arcanum-elixir.nvim-preview*



ABOUT ARCANUMELIXIR                  *arcanum-elixir.nvim-about-arcanumelixir*

**arcanum-elixir.nvim** is a mystical Neovim colorscheme designed with an
emphasis on **light mode development** while now offering a refined **dark mode
companion**. Created for developers who value both functionality and magical
aesthetic elegance, ArcanumElixir transforms the familiar earthtone palette
into a refined purple experience inspired by Elixir’s mystical powers.

**Light Theme Primary:** ArcanumElixir’s light theme remains the primary
focus, exclusively designed for light backgrounds to achieve the intended
mystical coding atmosphere inspired by ancient arcane manuscripts.

**Dark Theme Available:** The new dark companion maintains the same purple
harmony and mystical elegance, carefully adapted for low-light environments
while preserving the arcane aesthetic.


DESIGN PHILOSOPHY ~

ArcanumElixir draws its inspiration from the **mystical purple tones** of
**Elixir**, which uses enchanting, magical colors that reduce eye strain during
extended coding sessions. This same principle applies to development - the
purple palette creates a comfortable, mystical atmosphere perfect for long
coding sessions, research, and thoughtful programming.

**Why purple tones for both light and dark?** - **Reduced eye fatigue** during
extended coding sessions in any lighting condition - **Mystical ambiance**
reminiscent of ancient arcane manuscripts and magical libraries -
**Professional appearance** suitable for magical and alchemical environments -
**Enchanting, inviting atmosphere** that encourages focused spellcasting -
**Adaptable** - Light theme for bright environments, dark theme for low-light
settings - **Consistent aesthetic** - Both themes maintain the same arcane
character


KEY FEATURES ~

- **Dual theme support** - Primary light theme with companion dark theme
- **Based on gruvbox.nvim** - Inherits the robust architecture and reliability
- **Purple color palette** - Mystical, arcane tones inspired by Elixir
- **Full treesitter support** - Enhanced syntax highlighting
- **LSP semantic highlights** - Modern language server integration
- **Customizable** - Extensive configuration options
- **Mystical focus** - Perfect for research, documentation, and magical coding
- **Light/Dark harmony** - Both themes share the same arcane aesthetic principles


REQUIREMENTS                                *arcanum-elixir.nvim-requirements*

- Neovim 0.8.0+


INSTALLATION                                *arcanum-elixir.nvim-installation*


USING LAZY.NVIM (RECOMMENDED) ~

>lua
    {
      "abreujp/arcanum-elixir.nvim",
      priority = 1000,
      config = function()
        require("arcanum_elixir").setup({
          -- your configuration here
        })
        
        -- For light theme (primary)
        vim.o.background = "light"
        vim.cmd("colorscheme arcanum_elixir")
        
        -- OR for dark theme
        -- vim.o.background = "dark"
        -- vim.cmd("colorscheme arcanum_elixir")
      end,
    }
<


USING PACKER ~

>lua
    use {
      "abreujp/arcanum-elixir.nvim",
      config = function()
        require("arcanum_elixir").setup()
        
        -- Choose your preferred theme
        vim.o.background = "light"  -- For light theme
        vim.cmd("colorscheme arcanum_elixir")
        
        -- OR use: 
        -- vim.o.background = "dark"
        -- vim.cmd("colorscheme arcanum_elixir") for dark theme
      end
    }
<


USING VIM-PLUG ~

>vim
    Plug 'abreujp/arcanum-elixir.nvim'
<

Then in your init.vim:

>vim
    " For light theme (primary)
    set background=light
    colorscheme arcanum_elixir
    
    " OR for dark theme
    " set background=dark
    " colorscheme arcanum_elixir
<


QUICK START                                  *arcanum-elixir.nvim-quick-start*


LUA CONFIGURATION ~

>lua
    require("arcanum_elixir").setup({
      contrast = "soft",  -- "hard", "soft" or "" (default)
      transparent_mode = false,
    })
    
    -- Choose your preferred theme
    vim.o.background = "light"  -- For light theme
    vim.cmd("colorscheme arcanum_elixir")
    
    -- OR for dark theme
    -- vim.o.background = "dark"
    -- vim.cmd("colorscheme arcanum_elixir")
<


VIM CONFIGURATION ~

>vim
    " For light theme (primary)
    set background=light
    colorscheme arcanum_elixir
    
    " OR for dark theme
    " set background=dark
    " colorscheme arcanum_elixir
<


CONFIGURATION                              *arcanum-elixir.nvim-configuration*

ArcanumElixir provides extensive customization options while maintaining
sensible defaults:

>lua
    require("arcanum_elixir").setup({
      terminal_colors = true,     -- Enable terminal colors
      undercurl = true,          -- Enable undercurls for diagnostics
      underline = true,          -- Enable underlines
      bold = true,               -- Enable bold text
      italic = {
        strings = true,          -- Italicize strings
        emphasis = true,         -- Italicize emphasized text
        comments = true,         -- Italicize comments
        operators = false,       -- Don't italicize operators
        folds = true,           -- Italicize fold text
      },
      strikethrough = true,      -- Enable strikethrough
      invert_selection = false,  -- Don't invert selections
      invert_signs = false,      -- Don't invert sign column
      invert_tabline = false,    -- Don't invert tabline
      inverse = true,            -- Invert background for search, diffs, etc.
      contrast = "",             -- Contrast level: "hard", "soft", or ""
      palette_overrides = {},    -- Override palette colors
      overrides = {},            -- Override highlight groups
      dim_inactive = false,      -- Don't dim inactive windows
      transparent_mode = false,  -- Disable transparent background
    })
<

**Important:** Always call `setup()` before setting the colorscheme!


PALETTE CUSTOMIZATION ~

Override specific colors while maintaining the sepia harmony:

>lua
    require("arcanum_elixir").setup({
      palette_overrides = {
        bright_red = "#CC6666",    -- Custom error color
        gray = "#999999",          -- Custom comment color
      }
    })
<


HIGHLIGHT GROUP OVERRIDES ~

Customize specific highlighting:

>lua
    require("arcanum_elixir").setup({
      overrides = {
        -- UI elements
        SignColumn = { bg = "#F5F5DC" },
        
        -- Treesitter groups
        ["@comment.lua"] = { fg = "#8B7355", italic = true },
        ["@string"] = { fg = "#8B6F47" },
        
        -- LSP semantic tokens
        ["@lsp.type.method"] = { fg = "#A0623A", bold = true },
      }
    })
<


ACKNOWLEDGMENTS                          *arcanum-elixir.nvim-acknowledgments*

**arcanum-elixir.nvim** is built upon the excellent foundation of gruvbox.nvim
<https://github.com/ellisonleao/gruvbox.nvim> by @ellisonleao
<https://github.com/ellisonleao>. The robust architecture and thoughtful design
of gruvbox made ArcanumElixir possible.

**Color inspiration** comes from the mystical purple tones of the Elixir
<https://elixir-lang.org/> programming language, which demonstrates how
enchanting, magical colors can reduce eye strain and create a comfortable
coding environment.


LICENSE                                          *arcanum-elixir.nvim-license*

MIT License - see LICENSE <LICENSE> for details.

==============================================================================
1. Links                                           *arcanum-elixir.nvim-links*

1. *@ellisonleao*: 

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
